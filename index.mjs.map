{"version":3,"file":"index.mjs","sources":["../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name add\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/add}\n*/\nimport add from '@stdlib/number-float64-base-add';\nsetReadOnly( ns, 'add', add );\n\n/**\n* @name add3\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/add3}\n*/\nimport add3 from '@stdlib/number-float64-base-add3';\nsetReadOnly( ns, 'add3', add3 );\n\n/**\n* @name add4\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/add4}\n*/\nimport add4 from '@stdlib/number-float64-base-add4';\nsetReadOnly( ns, 'add4', add4 );\n\n/**\n* @name add5\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/add5}\n*/\nimport add5 from '@stdlib/number-float64-base-add5';\nsetReadOnly( ns, 'add5', add5 );\n\n/**\n* @name assert\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/number/float64/base/assert}\n*/\nimport assert from '@stdlib/number-float64-base-assert';\nsetReadOnly( ns, 'assert', assert );\n\n/**\n* @name div\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/div}\n*/\nimport div from '@stdlib/number-float64-base-div';\nsetReadOnly( ns, 'div', div );\n\n/**\n* @name exponent\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/exponent}\n*/\nimport exponent from '@stdlib/number-float64-base-exponent';\nsetReadOnly( ns, 'exponent', exponent );\n\n/**\n* @name fromBinaryString\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/from-binary-string}\n*/\nimport fromBinaryString from '@stdlib/number-float64-base-from-binary-string';\nsetReadOnly( ns, 'fromBinaryString', fromBinaryString );\n\n/**\n* @name fromInt64Bytes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/from-int64-bytes}\n*/\nimport fromInt64Bytes from '@stdlib/number-float64-base-from-int64-bytes';\nsetReadOnly( ns, 'fromInt64Bytes', fromInt64Bytes );\n\n/**\n* @name fromWords\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/from-words}\n*/\nimport fromWords from '@stdlib/number-float64-base-from-words';\nsetReadOnly( ns, 'fromWords', fromWords );\n\n/**\n* @name getHighWord\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/get-high-word}\n*/\nimport getHighWord from '@stdlib/number-float64-base-get-high-word';\nsetReadOnly( ns, 'getHighWord', getHighWord );\n\n/**\n* @name getLowWord\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/get-low-word}\n*/\nimport getLowWord from '@stdlib/number-float64-base-get-low-word';\nsetReadOnly( ns, 'getLowWord', getLowWord );\n\n/**\n* @name identity\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/identity}\n*/\nimport identity from '@stdlib/number-float64-base-identity';\nsetReadOnly( ns, 'identity', identity );\n\n/**\n* @name mul\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/mul}\n*/\nimport mul from '@stdlib/number-float64-base-mul';\nsetReadOnly( ns, 'mul', mul );\n\n/**\n* @name normalize\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/normalize}\n*/\nimport normalize from '@stdlib/number-float64-base-normalize';\nsetReadOnly( ns, 'normalize', normalize );\n\n/**\n* @name setHighWord\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/set-high-word}\n*/\nimport setHighWord from '@stdlib/number-float64-base-set-high-word';\nsetReadOnly( ns, 'setHighWord', setHighWord );\n\n/**\n* @name setLowWord\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/set-low-word}\n*/\nimport setLowWord from '@stdlib/number-float64-base-set-low-word';\nsetReadOnly( ns, 'setLowWord', setLowWord );\n\n/**\n* @name signbit\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/signbit}\n*/\nimport signbit from '@stdlib/number-float64-base-signbit';\nsetReadOnly( ns, 'signbit', signbit );\n\n/**\n* @name sub\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/sub}\n*/\nimport sub from '@stdlib/number-float64-base-sub';\nsetReadOnly( ns, 'sub', sub );\n\n/**\n* @name toBinaryString\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/to-binary-string}\n*/\nimport toBinaryString from '@stdlib/number-float64-base-to-binary-string';\nsetReadOnly( ns, 'toBinaryString', toBinaryString );\n\n/**\n* @name float64ToFloat32\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/to-float32}\n*/\nimport float64ToFloat32 from '@stdlib/number-float64-base-to-float32';\nsetReadOnly( ns, 'float64ToFloat32', float64ToFloat32 );\n\n/**\n* @name float64ToInt32\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/to-int32}\n*/\nimport float64ToInt32 from '@stdlib/number-float64-base-to-int32';\nsetReadOnly( ns, 'float64ToInt32', float64ToInt32 );\n\n/**\n* @name float64ToInt64Bytes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/to-int64-bytes}\n*/\nimport float64ToInt64Bytes from '@stdlib/number-float64-base-to-int64-bytes';\nsetReadOnly( ns, 'float64ToInt64Bytes', float64ToInt64Bytes );\n\n/**\n* @name float64ToUint32\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/to-uint32}\n*/\nimport float64ToUint32 from '@stdlib/number-float64-base-to-uint32';\nsetReadOnly( ns, 'float64ToUint32', float64ToUint32 );\n\n/**\n* @name toWords\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/to-words}\n*/\nimport toWords from '@stdlib/number-float64-base-to-words';\nsetReadOnly( ns, 'toWords', toWords );\n\n/**\n* @name ulpdiff\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/ulp-difference}\n*/\nimport ulpdiff from '@stdlib/number-float64-base-ulp-difference';\nsetReadOnly( ns, 'ulpdiff', ulpdiff );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["ns","setReadOnly","add","add3","add4","add5","assert","div","exponent","fromBinaryString","fromInt64Bytes","fromWords","getHighWord","getLowWord","identity","mul","normalize","setHighWord","setLowWord","signbit","sub","toBinaryString","float64ToFloat32","float64ToInt32","float64ToInt64Bytes","float64ToUint32","toWords","ulpdiff"],"mappings":";;6vLAoCA,IAAAA,EAAA,CAAA,EAUAC,EAAAD,EAAA,MAAAE,GAUAD,EAAAD,EAAA,OAAAG,GAUAF,EAAAD,EAAA,OAAAI,GAUAH,EAAAD,EAAA,OAAAK,GAUAJ,EAAAD,EAAA,SAAAM,GAUAL,EAAAD,EAAA,MAAAO,GAUAN,EAAAD,EAAA,WAAAQ,GAUAP,EAAAD,EAAA,mBAAAS,GAUAR,EAAAD,EAAA,iBAAAU,GAUAT,EAAAD,EAAA,YAAAW,GAUAV,EAAAD,EAAA,cAAAY,GAUAX,EAAAD,EAAA,aAAAa,GAUAZ,EAAAD,EAAA,WAAAc,GAUAb,EAAAD,EAAA,MAAAe,GAUAd,EAAAD,EAAA,YAAAgB,GAUAf,EAAAD,EAAA,cAAAiB,GAUAhB,EAAAD,EAAA,aAAAkB,GAUAjB,EAAAD,EAAA,UAAAmB,GAUAlB,EAAAD,EAAA,MAAAoB,GAUAnB,EAAAD,EAAA,iBAAAqB,GAUApB,EAAAD,EAAA,mBAAAsB,GAUArB,EAAAD,EAAA,iBAAAuB,GAUAtB,EAAAD,EAAA,sBAAAwB,GAUAvB,EAAAD,EAAA,kBAAAyB,GAUAxB,EAAAD,EAAA,UAAA0B,GAUAzB,EAAAD,EAAA,UAAA2B"}